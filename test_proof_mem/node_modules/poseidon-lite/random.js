"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRandomBytes = getRandomBytes;
exports.getRandomSeed = getRandomSeed;
exports.getThreadRng = getThreadRng;
var _chacha = _interopRequireDefault(require("./chacha.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function getRandomBytes(n) {
  let array = new Uint8Array(n);
  if (typeof window !== 'undefined') {
    // Browser
    if (typeof window.crypto !== "undefined") {
      // Supported
      window.crypto.getRandomValues(array);
    } else {
      // fallback
      for (let i = 0; i < n; i++) {
        array[i] = Math.random() * 4294967296 >>> 0;
      }
    }
  } else {
    // NodeJS
    const crypto = require('crypto');
    crypto.randomFillSync(array);
  }
  return array;
}
function getRandomSeed() {
  const arr = getRandomBytes(32);
  const arrV = new Uint32Array(arr.buffer);
  const seed = [];
  for (let i = 0; i < 8; i++) {
    seed.push(arrV[i]);
  }
  return seed;
}
let threadRng = null;
function getThreadRng() {
  if (threadRng) return threadRng;
  threadRng = new _chacha.default(getRandomSeed());
  return threadRng;
}